# While Loop
snippet wh
	while (${1:/* condition */}) 
	{
		${2:/* code */}
	}
# For Loop
snippet for
	for (${2:i} = 0; $2 < ${1:count}; $2${3:++}) 
	{
		${4:/* code */}
	}
# Custom For Loop
snippet forr
	for (${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++}) {
		${5:/* code */}
	}
# Function
snippet fun
	${1:void} ${2:function_name}(${3})
	{
		${4:/* code */}
	}
#----------------------------------------yytx_sg-------------------------------------------
snippet eg_s
	static ilog_obj *e_log = err_log::instance()->get_ilog("${1}");
snippet eg
	e_log->error("michaelwang_say ${1}");
snippet os
	out_stream os(client::send_buf, client::send_buf_len);
	os << ${1}; 
	player->send_request(${2}, &os);
snippet dis 
	int ${1:module}::dispatch_msg(player_obj *player,
																	 const int msg_id, const char *msg, const int len)
	{
	#define SHORT_CODE(ID, FUNC) case ID:             \
		ret = $1::FUNC(player, msg, len);   \
		break
	#define SHORT_DEFAULT default:                    \
		e_log->error("unknow msg id %d", msg_id);       \
		break

		int ret = 0;
		switch (msg_id)
		{
			SHORT_CODE(${2}, ${3});
			SHORT_DEFAULT;
		}
		return ret;
	}
snippet main 
	#include <stdio.h>

	int main (int argc, char *argv[])
	{
		${1}
		return 0;
	}
